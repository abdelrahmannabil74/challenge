FROM php:fpm-alpine

RUN docker-php-ext-install pdo_mysql

CMD ["php-fpm"]

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/html/challenge/

# Set working directory
WORKDIR /var/www/html/challenge


# Install dependencies
RUN echo "ipv6" >> /etc/modules
RUN apk update && apk add --no-cache \
   freetype-dev \
   libjpeg-turbo-dev \
   libpng-dev \
   libzip-dev \
    zip \
    jpegoptim optipng pngquant gifsicle \
    vim \
    unzip \
    git \
    curl

# Clear cache
RUN apk del --no-cache && rm -rf /var/lib/apt/lists/*

# Install extensions
RUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl
RUN docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/
RUN docker-php-ext-install gd

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Add user for laravel application
RUN adduser -D -u 1000 www

# Copy existing application directory contents
COPY . /var/www/html/challenge

# Copy existing application directory permissions
COPY --chown=www:www . /var/www/html/challenge

# Change current user to www
USER www

# Expose port 9000 and start php-fpm server
EXPOSE 9000
